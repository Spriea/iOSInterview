{"data":[{"id":"739","title":" 什么是线程？","source":"","updated":"1540008874","html_md5":"32e884d052714b4a9e31f5d3c361d7db"},{"id":"738","title":"如何在Java中实现线程？","source":"","updated":"1540008841","html_md5":"ce8eecc0b269500064db7911f2f3cd7c"},{"id":"737","title":" 用Runnable还是Thread？","source":"","updated":"1540008821","html_md5":"2c93760c46394e0cdea43d303e7ff7d4"},{"id":"736","title":" Thread 类中的start() 和 run() 方法有什么区别？","source":"","updated":"1540008787","html_md5":"28923ff02781a6890adadfad9a13bff5"},{"id":"735","title":"Java中Runnable和Callable有什么不同？","source":"","updated":"1540008750","html_md5":"3ab07e32e0e0275ca52911c71cb82f41"},{"id":"734","title":"Java中CyclicBarrier 和 CountDownLatch有什么不同？","source":"","updated":"1540008694","html_md5":"8ac4af3309fc66bba19e0235b940a5c3"},{"id":"733","title":"Java内存模型是什么？","source":"","updated":"1540008662","html_md5":"74ca16c111745c03dae3d4281aa9c6e6"},{"id":"732","title":" Java中的volatile 变量是什么？","source":"","updated":"1540008572","html_md5":"877346f6607030e3894b6aaf553afb51"},{"id":"731","title":"什么是线程安全？Vector是一个线程安全类吗？","source":"","updated":"1540008539","html_md5":"c4aee1c0a33e9f6108d08771684c3b4c"},{"id":"730","title":" Java中如何停止一个线程？","source":"","updated":"1540008507","html_md5":"202fcd113197f3138f12c5c06197c956"},{"id":"729","title":" 一个线程运行时发生异常会怎样？","source":"","updated":"1540008475","html_md5":"b2efb3dcb2c56f85011d26a31e3d3fc5"},{"id":"728","title":"如何在两个线程间共享数据？","source":"","updated":"1540008438","html_md5":"9e49d159bd6b92c67623de91c50eaafd"},{"id":"727","title":"Java中notify 和 notifyAll有什么区别？","source":"","updated":"1540008337","html_md5":"6287775b8fa3cb2189e0f5dc7679bdce"},{"id":"726","title":"为什么wait, notify 和 notifyAll这些方法不在thread类里面？","source":"","updated":"1540008307","html_md5":"cd27ebc8db907f8658ad6344c31f9284"},{"id":"725","title":"什么是ThreadLocal变量？","source":"","updated":"1540008232","html_md5":"fd6dde0c9b532706cdb5b3eba41328c0"},{"id":"724","title":" 什么是FutureTask？","source":"","updated":"1540008108","html_md5":"4c98b0e0af007e62a4e8ab3fd7655f0f"},{"id":"723","title":"Java中interrupted 和 isInterruptedd方法的区别？","source":"","updated":"1540008065","html_md5":"8f7a595dfa8455d9b5bda7736883b372"},{"id":"722","title":"为什么wait和notify方法要在同步块中调用？","source":"","updated":"1540008010","html_md5":"b68984dacfe8527b02e8bd6938a386ff"},{"id":"721","title":"为什么你应该在循环中检查等待条件?","source":"","updated":"1540007977","html_md5":"b49dafc2a4b785cd7d919bd75f12c551"},{"id":"720","title":" Java中的同步集合与并发集合有什么区别？","source":"","updated":"1540007937","html_md5":"f7f055d781399fa8a8a59ff355cd16c7"},{"id":"719","title":" Java中堆和栈有什么不同？","source":"","updated":"1540007902","html_md5":"69e792a47ed9a01276587f8195b3db1e"},{"id":"718","title":"什么是线程池？ 为什么要使用它？","source":"","updated":"1540007870","html_md5":"bbc5887010b52e449533973fc7aea974"},{"id":"717","title":" 如何写代码来解决生产者消费者问题？","source":"","updated":"1540007835","html_md5":"9ac2e1f1008c0c7c5ebc6ca1e96bf923"},{"id":"716","title":"如何避免死锁？","source":"","updated":"1540007793","html_md5":"e12ca388bd36dfbc9c7b6935c44b15a9"},{"id":"715","title":" Java中活锁和死锁有什么区别？","source":"","updated":"1540007734","html_md5":"b088af2056e78cc988456a56e906810d"},{"id":"714","title":"怎么检测一个线程是否拥有锁？","source":"","updated":"1540007667","html_md5":"64aad5999d0b178b58bcd8e22089b771"},{"id":"713","title":"你如何在Java中获取线程堆栈？","source":"","updated":"1540007635","html_md5":"d5ba910470dd85f8fa130287d7c4e1e5"},{"id":"712","title":" JVM中哪个参数是用来控制线程的栈堆栈小的","source":"","updated":"1540007598","html_md5":"2f03075c49b71061b3a95574add79ab7"},{"id":"711","title":" Java中synchronized 和 ReentrantLock 有什么不同？","source":"","updated":"1540007571","html_md5":"9bf8fe3f0aafb52cf0e989bcc25a1262"},{"id":"710","title":"有三个线程T1，T2，T3，怎么确保它们按顺序执行？","source":"","updated":"1540007535","html_md5":"d9a7db4be7da9fe5bf144e59628739f7"},{"id":"709","title":" Thread类中的yield方法有什么作用？","source":"","updated":"1540007486","html_md5":"3f1501f03a49b70b085835ed420fcf8c"},{"id":"708","title":" Java中ConcurrentHashMap的并发度是什么？","source":"","updated":"1540007452","html_md5":"97edf70c3ec6e617f07bdf7eb6e85286"},{"id":"707","title":"Java中Semaphore是什么？","source":"","updated":"1540007414","html_md5":"5f48d033d3bbae5fcc0ea1d3dea0abfc"},{"id":"706","title":"如果你提交任务时，线程池队列已满。会时发会生什么？","source":"","updated":"1540007375","html_md5":"51842c39fc44e1d80ca9bd709e1b8c64"},{"id":"705","title":" Java线程池中submit() 和 execute()方法有什么区别？","source":"","updated":"1540007346","html_md5":"28c96c20bdac2f365ab1dd3a0cf99a87"},{"id":"704","title":"什么是阻塞式方法？","source":"","updated":"1540007275","html_md5":"5f46fe077bfc8ec1d9556f46902e311e"},{"id":"703","title":" Swing是线程安全的吗？ 为什么？","source":"","updated":"1540007204","html_md5":"b8326e6191e0878a760add0058cd9065"},{"id":"702","title":" Java中invokeAndWait 和 invokeLater有什么区别？","source":"","updated":"1540007086","html_md5":"119ef0ba76fac08bddb8e5ab50c23003"},{"id":"701","title":"Swing API中那些方法是线程安全的？","source":"","updated":"1540007005","html_md5":"8cb621a718870aef16197708ca9f7f73"},{"id":"700","title":" 如何在Java中创建Immutable对象？","source":"","updated":"1540006955","html_md5":"20cdaed048780bf680337d585598a234"},{"id":"699","title":" Java中的ReadWriteLock是什么？","source":"","updated":"1540006906","html_md5":"9468e34c7fae1504e6a07d52fdf7c946"},{"id":"698","title":"volatile 变量和 atomic 变量有什么不同？","source":"","updated":"1540006862","html_md5":"b5fa077f1ecf9a1b455593a1c38c4f43"},{"id":"697","title":"如果同步块内的线程抛出异常会发生什么？","source":"","updated":"1540006821","html_md5":"f940c2f3a46052a3fcb90cbe06bbdd7c"},{"id":"696","title":"单例模式的双检锁是什么？","source":"","updated":"1540006787","html_md5":"a95fd21f87504094ffe3827ff0819d43"},{"id":"695","title":"如何在Java中创建线程安全的Singleton？","source":"","updated":"1540006726","html_md5":"3ef003f705419c4bf12fe5c93b81b21b"},{"id":"694","title":" 写出3条你遵循的多线程最佳实践","source":"","updated":"1540006669","html_md5":"d247836089c0ecb7eb4cdcd228555ce3"},{"id":"693","title":"如何强制启动一个线程？","source":"","updated":"1540006450","html_md5":"fd1e891a368481a67a5c09d270da183b"},{"id":"692","title":" Java中的fork join框架是什么？","source":"","updated":"1540006394","html_md5":"8b8cacfe04faf03e40b48999e87037f9"},{"id":"691","title":" Java多线程中调用wait() 和 sleep()方法有什么不同？ ","source":"","updated":"1540006339","html_md5":"76526039f172ad7ab5be670601e24fa2"},{"id":"690","title":"用Java写一个冒泡排序。 ","source":"","updated":"1540006070","html_md5":"f73c6408ca7e7ac3037051620ff3889e"},{"id":"689","title":"用Java写一个折半查找。","source":"","updated":"1540006009","html_md5":"42934edf90b1ac8b7d6c2b883cf75de7"},{"id":"688","title":"UML中有哪些常用的图？","source":"","updated":"1540005890","html_md5":"971f49babc4f1290b508ba6ab3c544ff"},{"id":"687","title":"简述一下面向对象的&quot;六原则一法则&quot;。","source":"","updated":"1540005608","html_md5":"3b6a0c95e3961336ec629db923c1e07d"},{"id":"686","title":"简述一下你了解的设计模式。","source":"","updated":"1540005529","html_md5":"f959ac04effffdc2b4a5f412a8eb06f8"},{"id":"685","title":"用Java写一个单例类。","source":"","updated":"1540005484","html_md5":"37fdf024d9e52e85f7c719fbe36c77a7"},{"id":"684","title":"获得一个类的类对象有哪些方式？","source":"","updated":"1540005235","html_md5":"21187799e54ef1fc0ed24e24254c4ac3"},{"id":"683","title":"如何通过反射创建对象？ ","source":"","updated":"1540005194","html_md5":"4c722a8f0860db55321eed46d9861794"},{"id":"682","title":"如何通过反射获取和设置对象私有字段的值？ ","source":"","updated":"1540005123","html_md5":"56b8f2702766493f4dace52de75b8395"},{"id":"681","title":"如何通过反射调用对象的方法？ ","source":"","updated":"1540005048","html_md5":"ee82ec94001bec2464cf7410dc342adf"},{"id":"680","title":"Java中是如何支持正则表达式操作的？ ","source":"","updated":"1540004991","html_md5":"2acdd29b7933917d3fd16434e020fe92"},{"id":"679","title":"简述正则表达式及其用途。","source":"","updated":"1540004663","html_md5":"25bd2a262d38ca2983691681f39828b9"},{"id":"678","title":"JDBC能否处理Blob和Clob？ ","source":"","updated":"1540004622","html_md5":"0ea3eb08ec3dee2801ecbc95e71c2ed3"},{"id":"677","title":"JDBC中如何进行事务处理？ ","source":"","updated":"1540004494","html_md5":"b52a960d0cc9e1670c5c950850bb527f"},{"id":"676","title":"事务的ACID是指什么？ ","source":"","updated":"1540004390","html_md5":"a02bbaf240eafbb25e29fd64b5176fdb"},{"id":"675","title":"什么是DAO模式？ ","source":"","updated":"1540003104","html_md5":"7b46a9998ca7daaf6f93209fd616627c"},{"id":"674","title":"阐述JDBC操作数据库的步骤。","source":"","updated":"1540002997","html_md5":"e9fdee98dd21828f5e9ff24e98c658e9"},{"id":"673","title":"Statement和PreparedStatement有什么区别？哪个性能更好？ ","source":"","updated":"1540002807","html_md5":"5c7f752b5f151b9f728792ee08753134"},{"id":"672","title":"使用JDBC操作数据库时，如何提升读取数据的性能？如何提升更新数据的性能？","source":"","updated":"1540002670","html_md5":"89a8acd7e542624311840797e1f1ad2d"},{"id":"671","title":"在进行数据库编程时，连接池有什么作用？ ","source":"","updated":"1540002635","html_md5":"88572cf7653def532a4d73b43bd76d17"},{"id":"670","title":"你在项目中哪些地方用到了XML？ ","source":"","updated":"1540002500","html_md5":"e07a580bda22bebbe449db686254a02a"},{"id":"669","title":"XML文档定义有几种形式？它们之间有何本质区别？解析XML文档有哪几种方式？","source":"","updated":"1540002454","html_md5":"cd3c4016dfc7cf0a7a15b7143c357028"},{"id":"668","title":"用Java的套接字编程实现一个多线程的回显（echo）服务器。 ","source":"","updated":"1540002213","html_md5":"e2c1a8afe28538b7ca439bc4a61c3fea"},{"id":"667","title":"如何用Java代码列出一个目录下所有的文件？","source":"","updated":"1540002048","html_md5":"3c05f346133525e0a7690834b46ab3f3"},{"id":"661","title":"写一个方法，输入一个文件名和一个字符串，统计这个字符串在这个文件中出现的次数","source":"","updated":"1521642546","html_md5":"38f417c6de9ee179963822721fa148fa"},{"id":"660","title":" 编程实现文件拷贝","source":"","updated":"1521642194","html_md5":"08413564e3fd2e40f97a21299c425ed5"},{"id":"659","title":"Java中有几种类型的流？","source":"","updated":"1521642123","html_md5":"03e33d0fd2f9c3ab5d6b08f214511b85"},{"id":"658","title":"Java 中如何实现序列化，有什么意义？","source":"","updated":"1521642005","html_md5":"531be8cc2a8bb0766951b9830885771b"},{"id":"657","title":"简述 synchronized 和 java.util.concurrent.locks.Lock 的异同？ ","source":"","updated":"1521641889","html_md5":"3e3776eedf68db11c34456a302b48a58"},{"id":"656","title":"什么是线程池（thread pool）？ ","source":"","updated":"1521641786","html_md5":"b191186d6c0f6bf6d510bfd26296b272"},{"id":"655","title":"启动一个线程是调用 run() 还是 start() 方法？","source":"","updated":"1521641669","html_md5":"b8a68603b1b43ab54252fb9aed2eef60"},{"id":"654","title":"举例说明同步和异步","source":"","updated":"1521641626","html_md5":"6a016d7612cd4c8c40a2d94af36ffa1e"},{"id":"653","title":"synchronized 关键字的用法","source":"","updated":"1521641529","html_md5":"bc896e6b7513191b99781d0c2b01f076"},{"id":"652","title":"编写多线程程序有几种实现方式？","source":"","updated":"1521641447","html_md5":"932d2f8ee6e996eb9aca409805dadf4c"},{"id":"651","title":"请说出与线程同步以及线程调度相关的方法","source":"","updated":"1521641284","html_md5":"aedaac6db1ffc116e6461fa54b37f218"},{"id":"650","title":"当一个线程进入一个对象的 synchronized 方法 A 之后，其它线程是否可进入此对象的 synchronized 方法 B ？","source":"","updated":"1517149883","html_md5":"4c9e051e05688c3def8d2f186b4f4744"},{"id":"649","title":"线程的 sleep() 方法和 yield() 方法有什么区别？ ","source":"","updated":"1517149831","html_md5":"f14ea0150689c47243c73a7ca9580b52"},{"id":"648","title":"Thread 类的 sleep() 方法和对象的 wait() 方法都可以让线程暂停执行，它们有什么区别?","source":"","updated":"1517149756","html_md5":"30caa7a7faf9a3fdbf0a98337ca73d01"},{"id":"647","title":"List、Map、Set三个接口存取元素时，各有什么特点？ ","source":"","updated":"1517148932","html_md5":"3a85a1ddc1718b11b44f1281eb2c065e"},{"id":"646","title":"Collection 和 Collections的区别？","source":"","updated":"1517148682","html_md5":"26c2ffb4748a0cf35e72c5713fd5cb64"},{"id":"645","title":"阐述ArrayList、Vector、LinkedList 的存储性能和特性","source":"","updated":"1517148612","html_md5":"899ad116d470aff16242ebfa35bafef8"},{"id":"644","title":"List、Set、Map是否继承自 Collection 接口？","source":"","updated":"1517148469","html_md5":"1f0f5dd88f1b0d047708a15402b4abd3"},{"id":"643","title":"类 ExampleA 继承 Exception ，类 ExampleB 继承 ExampleA","source":"","updated":"1517148409","html_md5":"4469d3ae962e39b43da97f7308c0e9ee"},{"id":"612","title":"阐述 final、finally、finalize 的区别 ","source":"","updated":"1516799322","html_md5":"cdbec4ee52582c6de6b80f691c14b1d7"},{"id":"611","title":"列出一些你常见的运行时异常？ ","source":"","updated":"1516799236","html_md5":"25626f545478ff131075d84e044f6224"},{"id":"610","title":"运行时异常与受检异常有何异同？ ","source":"","updated":"1516799209","html_md5":"b51a086e2cc8a48cbe1244c5a24dd4be"},{"id":"609","title":"Java 语言如何进行异常处理，关键字：throws、throw、try、catch、finally 分别如何使用？","source":"","updated":"1516799167","html_md5":"9c3dd9f8777783ff54be99c905f290e0"},{"id":"608","title":"try{}里有一个return语句，那么紧跟在这个try后的finally{}里的代码会不会被执行，什么时候被执行，在return前还是后? ","source":"","updated":"1516799013","html_md5":"84e0d2b51ad973902dbb9a913dbe97f8"},{"id":"607","title":"Error 和 Exception 有什么区别？","source":"","updated":"1516798931","html_md5":"e725d0573175c3935d72f4822178719a"},{"id":"606","title":"什么时候用断言(assert)？","source":"","updated":"1516798859","html_md5":"3114aa2c432b63e626d3a076e64deeb0"},{"id":"605","title":"比较一下 Java 和 JavaSciprt","source":"","updated":"1516797997","html_md5":"b3a7666c1ba392b127159ff597bbac84"},{"id":"604","title":"打印昨天的当前时刻。","source":"","updated":"1516797862","html_md5":"916d05f37da1d8780c40fbc631033429"},{"id":"603","title":"日期和时间","source":"","updated":"1516797808","html_md5":"f8062522caeb1a89e1c2be90fead0f63"},{"id":"602","title":"怎样将 GB2312 编码的字符串转换为 ISO-8859-1 编码的字符串？ ","source":"","updated":"1516797530","html_md5":"f55656f319c18f573cbc0b283c08f15a"},{"id":"601","title":"如何实现字符串的反转及替换？ ","source":"","updated":"1516797476","html_md5":"4a64c88734a4fdd3b9c7d8d11d2c5f4b"},{"id":"600","title":"数据类型之间的转换","source":"","updated":"1516797411","html_md5":"814dcd0de9331205b2196f36b25ad3a1"},{"id":"599","title":"指出下面程序的运行结果。","source":"","updated":"1516797345","html_md5":"1089296361e262df705c79e7fd28a250"},{"id":"598","title":"Java 中的 final 关键字有哪些用法？ ","source":"","updated":"1516797276","html_md5":"5c016e0cdc855aa5f2713cc229d673f6"},{"id":"597","title":"内部类可以引用它的包含类（外部类）的成员吗？有没有什么限制？","source":"","updated":"1516797214","html_md5":"1eb5bb50a3dd4ab5bcd5783143869c62"},{"id":"596","title":"Anonymous Inner Class(匿名内部类)是否可以继承其它类？是否可以实现接口？","source":"","updated":"1516797181","html_md5":"f551bebe9aa1a7fed9b7af41c0d6f008"},{"id":"595","title":"一个&quot;.java&quot;源文件中是否可以包含多个类（不是内部类）？有什么限制？","source":"","updated":"1516797152","html_md5":"70c300f828f71f5b3d01f6649b5c1f84"},{"id":"594","title":"接口是否可继承（extends）接口？抽象类是否可实现（implements）接口？抽象类是否可继承具体类（concrete class）？","source":"","updated":"1516797122","html_md5":"c455ebe411c6a08c8abaeb0e693f3de2"},{"id":"590","title":"GC是什么？为什么要有GC？","source":"http:\/\/blog.csdn.net\/jackfrued\/article\/details\/44921941","updated":"1516533878","html_md5":"b34cc0d08de2b8634f189dfde594472a"},{"id":"589","title":"如何实现对象克隆？","source":"http:\/\/blog.csdn.net\/jackfrued\/article\/details\/44921941","updated":"1516533781","html_md5":"fc477e8ec99aa7a29fcc42f03e0f688c"},{"id":"588","title":"是否可以从一个静态（static）方法内部发出对非静态（non-static）方法的调用？ ","source":"http:\/\/blog.csdn.net\/jackfrued\/article\/details\/44921941","updated":"1516533664","html_md5":"0c0d801819916c7b0a93527720f8f50e"},{"id":"587","title":"阐述静态变量和实例变量的区别。","source":"http:\/\/blog.csdn.net\/jackfrued\/article\/details\/44921941","updated":"1516533629","html_md5":"251b928f53a46976cf2d0efda80380d0"},{"id":"586","title":"抽象的（abstract）方法是否可同时是静态的（static）,是否可同时是本地方法（native），是否可同时被synchronized修饰？ ","source":"http:\/\/blog.csdn.net\/jackfrued\/article\/details\/44921941","updated":"1516533556","html_md5":"6e73c0e9a354d890215d8e3c8548be02"},{"id":"585","title":"Java 中会存在内存泄漏吗，请简单描述。","source":"http:\/\/blog.csdn.net\/jackfrued\/article\/details\/44921941","updated":"1516533496","html_md5":"5d72e120d45d7e602718f551bc9adbda"},{"id":"584","title":"静态嵌套类(Static Nested Class)和内部类（Inner Class）的不同？ ","source":"http:\/\/blog.csdn.net\/jackfrued\/article\/details\/44921941","updated":"1516533337","html_md5":"62b7106ca653882a46e4345df7605df4"},{"id":"583","title":"抽象类（abstract class）和接口（interface）有什么异同？","source":"http:\/\/blog.csdn.net\/jackfrued\/article\/details\/44921941","updated":"1516533162","html_md5":"294908999320ba671f986d8390ffafd4"},{"id":"582","title":"char 型变量中能不能存贮一个中文汉字，为什么？","source":"http:\/\/blog.csdn.net\/jackfrued\/article\/details\/44921941","updated":"1516533050","html_md5":"394bd4ccb6044b190f3d75ea13ba3c41"},{"id":"581","title":"描述一下 JVM 加载 class 文件的原理机制","source":"http:\/\/blog.csdn.net\/jackfrued\/article\/details\/44921941","updated":"1516532935","html_md5":"1ff5c7c009b70473acd85af303532818"},{"id":"535","title":"重载（Overload）和重写（Override）的区别。重载的方法能否根据返回类型进行区分？","source":"","updated":"1516196731","html_md5":"97b7adc83ef63e7fc90a6eada9ef68a2"},{"id":"534","title":"String和StringBuilder、StringBuffer的区别？","source":"","updated":"1516196562","html_md5":"f60596c9aac7ba1e6d67fb2256e6035f"},{"id":"533","title":"当一个对象被当作参数传递到一个方法后，此方法可改变这个对象的属性，并可返回变化后的结果，那么这里到底是值传递还是引用传递？","source":"","updated":"1516196334","html_md5":"2ec11bb3389722b1aea00327fe2f2ceb"},{"id":"532","title":"是否可以继承String类？ ","source":"","updated":"1516196249","html_md5":"5dab3ea2f7ce228c10f0401d49a69874"},{"id":"531","title":"两个对象值相同(x.equals(y) == true)，但却可有不同的hash code，这句话对不对？","source":"","updated":"1516196093","html_md5":"e037e399bf123eb79258e5147adc58b7"},{"id":"529","title":"构造器（constructor）是否可被重写（override）？","source":"","updated":"1516195780","html_md5":"d1604f344c0d7334dd845672432d119f"},{"id":"528","title":"在 Java 中，如何跳出当前的多重嵌套循环？ ","source":"","updated":"1516195760","html_md5":"46e8a6c46e167eae1125e769db97f86d"},{"id":"527","title":"数组有没有 length() 方法？String有没有 length() 方法？","source":"","updated":"1516195683","html_md5":"fc26600c9ccf772c2acba258e94e0212"},{"id":"526","title":"用最有效率的方法计算 2 乘以 8 ？","source":"","updated":"1516195511","html_md5":"11ef8e9464174fa110d3dd8c628ce218"},{"id":"525","title":"switch 是否能作用在byte 上，是否能作用在long 上，是否能作用在String上？ ","source":"","updated":"1516195386","html_md5":"372060ab523c358eb5198a7ba4f09551"},{"id":"524","title":"Math.round(11.5) 等于多少？Math.round(-11.5)等于多少？ ","source":"","updated":"1516195198","html_md5":"f5e36232684f4ccace86aa6671c3eff0"},{"id":"523","title":"解释内存中的栈(stack)、堆(heap)和方法区(method area)的用法。","source":"","updated":"1516195140","html_md5":"ada8c1d80e578c77bd61be2956c80c69"},{"id":"522","title":"&amp; 和 &amp;&amp; 的区别？ ","source":"","updated":"1516194916","html_md5":"adc9a117eecb59ecd53b34b851f4c720"},{"id":"521","title":"int 和 Integer 有什么区别？ ","source":"","updated":"1516194673","html_md5":"0f93ab61545ede54ace16f68d9ec4059"},{"id":"520","title":"Java有没有goto？ ","source":"","updated":"1516194335","html_md5":"514dfab5433812e250d8405466c93942"},{"id":"519","title":"short s1 = 1; s1 = s1 + 1;有错吗?short s1 = 1; s1 += 1;有错吗？","source":"","updated":"1516194268","html_md5":"d526276932afd6fccbdbfee19160b053"},{"id":"518","title":"float f=3.4; 是否正确？","source":"","updated":"1516194123","html_md5":"ade6760cccc1417349d3dc212c14d0cd"},{"id":"517","title":"String 是最基本的数据类型吗？","source":"","updated":"1516194031","html_md5":"a21ee1ad7c6ae7141e63ca7cfe65bc0e"},{"id":"475","title":"Struts工作流程","source":"","updated":"1514477630","html_md5":"3d7ef5457cf54950b4f9eadf5274c78d"},{"id":"474","title":"事物的理解","source":"","updated":"1514477529","html_md5":"ea94ee55e5d5605c2c38f6c737baeba7"},{"id":"473","title":"jvm的优化","source":"","updated":"1514477367","html_md5":"8e45da2b4b72671ebdbc72eaf0ec5fd8"},{"id":"472","title":"对象的创建","source":"","updated":"1514477335","html_md5":"91a2ded4f1a34a241efae52e4ef7936e"},{"id":"471","title":"类加载的过程","source":"","updated":"1514477286","html_md5":"99462317b9f9339577e5061eaf0af3c7"},{"id":"470","title":"Java集合类框架的基本接口有哪些","source":"","updated":"1514477225","html_md5":"a7ca9690b6183d845e4d3a06847bc55b"},{"id":"469","title":"HTTP协议","source":"","updated":"1514477163","html_md5":"cf16a62225acabebf45afa7a853490ff"},{"id":"468","title":"Tomcat服务器优化（内存，并发连接数，缓存）","source":"","updated":"1514477103","html_md5":"4d1a3054238b11a57c3b9245128012d5"},{"id":"467","title":"数据库优化","source":"","updated":"1514477027","html_md5":"fc2ad3967998f2663dced8ecb5600355"},{"id":"466","title":"hibernate的核心思想","source":"","updated":"1514476926","html_md5":"fb4e7f33d0d6eda7a9fe529af42fb0e5"},{"id":"465","title":"AOP与IOC的概念（即spring的核心）","source":"","updated":"1514476862","html_md5":"1c52f233d1de8d778ec502fa8cb10c1d"},{"id":"464","title":"多线程","source":"","updated":"1514476730","html_md5":"5f5de3ac261c1520dc133bfff25b136f"},{"id":"463","title":"内部类与外部类的调用","source":"","updated":"1514476619","html_md5":"01eb397e8e5998308f21071deadc6232"},{"id":"462","title":"父类与子类之间的调用顺序（打印结果）","source":"","updated":"1514476587","html_md5":"b5a6851d1ff4d45da513340a8f877de4"},{"id":"461","title":"对ajax的理解","source":"","updated":"1514476534","html_md5":"f2120d210a256cedc354d0a8edd43f24"},{"id":"460","title":"冒泡排序、二分查找","source":"","updated":"1514476467","html_md5":"9c4ae0faf8bc5a7ad51372a54e33f474"},{"id":"459","title":"Java设计模式思想（单列模式，工厂模式，策略模式，共23种设计模式）","source":"","updated":"1514476251","html_md5":"05d0b927e82a369141fc9b26f40a0e5a"},{"id":"458","title":"给定一个txt文件，如何得到某字符串出现的次数","source":"","updated":"1514475985","html_md5":"604d8391ead0b2585a00b18af9ab33c2"},{"id":"457","title":"springMVC的执行流程","source":"","updated":"1514475897","html_md5":"785677682c34cf50afbbddb6d3bc67d6"},{"id":"456","title":"servlet执行流程","source":"","updated":"1514475760","html_md5":"e021e404f80b4cf3b10c7e1b73e4ee98"},{"id":"341","title":"redirect, forward区别 ","source":"","updated":"1513870814","html_md5":"56c2063a7127ffef0a924a71fc864593"},{"id":"340","title":"Statement与PreparedStatement的区别,什么是SQL注入，如何防止SQL注入?","source":"","updated":"1513870728","html_md5":"23182f08cb243f82b6aaea28289dd398"},{"id":"339","title":"HTTP 报文包含内容","source":"","updated":"1513870608","html_md5":"071d267e42ffd6fa560129c6154f88b0"},{"id":"338","title":"Servlet的生命周期 ","source":"","updated":"1513870508","html_md5":"524889d2d79220c188c06643d4bf6a74"},{"id":"337","title":"SESSION, COOKIE区别 ","source":"","updated":"1513870374","html_md5":"f15a9c34ecd202ef48804191f662fbd0"},{"id":"336","title":"Tomcat，apache，jboss的区别","source":"","updated":"1513870293","html_md5":"b74e9dcbb1d8caf2e28abdf56bd4715e"},{"id":"335","title":"ConcurrentHashMap和HashTable的区别 ","source":"","updated":"1513870188","html_md5":"2b8add27a4c4dcaaeb3007c94ca2ed69"},{"id":"334","title":"VECTOR,ARRAYLIST, LINKEDLIST的区别是什么？ ","source":"","updated":"1513870050","html_md5":"e1e3b0540abf5057f40ed6c8496a5342"},{"id":"333","title":"String,StringBuffer, StringBuilder 的区别是什么？String为什么是不可变的？","source":"","updated":"1513869965","html_md5":"1a440ef4064252d0ec39c9853d6adfa1"},{"id":"332","title":"抽象类和接口的区别，类可以继承多个类么，接口可以继承多个接口么,类可以实现多个接口么?","source":"","updated":"1513869580","html_md5":"6f8248ea4eb6e96cd072210581f09f90"},{"id":"331","title":"ArrayList 和 LinkedList 有什么区别?","source":"","updated":"1513869512","html_md5":"0d08dc1bfacfdcf73cada2680d3c75b8"}],"code":200}