{"data":{"html":"PGgzPueUqEphdmHnmoTlpZfmjqXlrZfnvJbnqIvlrp7njrDkuIDkuKrlpJrnur\/nqIvnmoTlm57mmL7vvIhlY2hv77yJ5pyN5Yqh5Zmo44CCPC9oMz4KPGhyIC8+CjxwcmU+PGNvZGU+aW1wb3J0IGphdmEuaW8uQnVmZmVyZWRSZWFkZXI7CmltcG9ydCBqYXZhLmlvLklPRXhjZXB0aW9uOwppbXBvcnQgamF2YS5pby5JbnB1dFN0cmVhbVJlYWRlcjsKaW1wb3J0IGphdmEuaW8uUHJpbnRXcml0ZXI7CmltcG9ydCBqYXZhLm5ldC5TZXJ2ZXJTb2NrZXQ7CmltcG9ydCBqYXZhLm5ldC5Tb2NrZXQ7CgpwdWJsaWMgY2xhc3MgRWNob1NlcnZlciB7CgogICAgcHJpdmF0ZSBzdGF0aWMgZmluYWwgaW50IEVDSE9fU0VSVkVSX1BPUlQgPSA2Nzg5OwoKICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHsgICAgICAgIAogICAgICAgIHRyeShTZXJ2ZXJTb2NrZXQgc2VydmVyID0gbmV3IFNlcnZlclNvY2tldChFQ0hPX1NFUlZFUl9QT1JUKSkgewogICAgICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oJnF1b3Q75pyN5Yqh5Zmo5bey57uP5ZCv5YqoLi4uJnF1b3Q7KTsKICAgICAgICAgICAgd2hpbGUodHJ1ZSkgewogICAgICAgICAgICAgICAgU29ja2V0IGNsaWVudCA9IHNlcnZlci5hY2NlcHQoKTsKICAgICAgICAgICAgICAgIG5ldyBUaHJlYWQobmV3IENsaWVudEhhbmRsZXIoY2xpZW50KSkuc3RhcnQoKTsKICAgICAgICAgICAgfQogICAgICAgIH0gY2F0Y2ggKElPRXhjZXB0aW9uIGUpIHsKICAgICAgICAgICAgZS5wcmludFN0YWNrVHJhY2UoKTsKICAgICAgICB9CiAgICB9CgogICAgcHJpdmF0ZSBzdGF0aWMgY2xhc3MgQ2xpZW50SGFuZGxlciBpbXBsZW1lbnRzIFJ1bm5hYmxlIHsKICAgICAgICBwcml2YXRlIFNvY2tldCBjbGllbnQ7CgogICAgICAgIHB1YmxpYyBDbGllbnRIYW5kbGVyKFNvY2tldCBjbGllbnQpIHsKICAgICAgICAgICAgdGhpcy5jbGllbnQgPSBjbGllbnQ7CiAgICAgICAgfQoKICAgICAgICBAT3ZlcnJpZGUKICAgICAgICBwdWJsaWMgdm9pZCBydW4oKSB7CiAgICAgICAgICAgIHRyeShCdWZmZXJlZFJlYWRlciBiciA9IG5ldyBCdWZmZXJlZFJlYWRlcihuZXcgSW5wdXRTdHJlYW1SZWFkZXIoY2xpZW50LmdldElucHV0U3RyZWFtKCkpKTsKICAgICAgICAgICAgICAgICAgICBQcmludFdyaXRlciBwdyA9IG5ldyBQcmludFdyaXRlcihjbGllbnQuZ2V0T3V0cHV0U3RyZWFtKCkpKSB7CiAgICAgICAgICAgICAgICBTdHJpbmcgbXNnID0gYnIucmVhZExpbmUoKTsKICAgICAgICAgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbigmcXVvdDvmlLbliLAmcXVvdDsgKyBjbGllbnQuZ2V0SW5ldEFkZHJlc3MoKSArICZxdW90O+WPkemAgeeahDogJnF1b3Q7ICsgbXNnKTsKICAgICAgICAgICAgICAgIHB3LnByaW50bG4obXNnKTsKICAgICAgICAgICAgICAgIHB3LmZsdXNoKCk7CiAgICAgICAgICAgIH0gY2F0Y2goRXhjZXB0aW9uIGV4KSB7CiAgICAgICAgICAgICAgICBleC5wcmludFN0YWNrVHJhY2UoKTsKICAgICAgICAgICAgfSBmaW5hbGx5IHsKICAgICAgICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgICAgICAgICAgY2xpZW50LmNsb3NlKCk7CiAgICAgICAgICAgICAgICB9IGNhdGNoIChJT0V4Y2VwdGlvbiBlKSB7CiAgICAgICAgICAgICAgICAgICAgZS5wcmludFN0YWNrVHJhY2UoKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KCn0KPC9jb2RlPjwvcHJlPgo8YmxvY2txdW90ZT4KPHA+PHN0cm9uZz7ms6jmhI88L3N0cm9uZz7vvJrkuIrpnaLnmoTku6PnoIHkvb\/nlKjkuoZKYXZhIDfnmoRUV1Lor63ms5XvvIznlLHkuo7lvojlpJrlpJbpg6jotYTmupDnsbvpg73pl7TmjqXnmoTlrp7njrDkuoZBdXRvQ2xvc2VhYmxl5o6l5Y+j77yI5Y2V5pa55rOV5Zue6LCD5o6l5Y+j77yJ77yM5Zug5q2k5Y+v5Lul5Yip55SoVFdS6K+t5rOV5ZyodHJ557uT5p2f55qE5pe25YCZ6YCa6L+H5Zue6LCD55qE5pa55byP6Ieq5Yqo6LCD55So5aSW6YOo6LWE5rqQ57G755qEY2xvc2UoKeaWueazle+8jOmBv+WFjeS5puWGmeWGl+mVv+eahGZpbmFsbHnku6PnoIHlnZfjgILmraTlpJbvvIzkuIrpnaLnmoTku6PnoIHnlKjkuIDkuKrpnZnmgIHlhoXpg6jnsbvlrp7njrDnur\/nqIvnmoTlip\/og73vvIzkvb\/nlKjlpJrnur\/nqIvlj6\/ku6Xpgb\/lhY3kuIDkuKrnlKjmiLdJL0\/mk43kvZzmiYDkuqfnlJ\/nmoTkuK3mlq3lvbHlk43lhbbku5bnlKjmiLflr7nmnI3liqHlmajnmoTorr\/pl67vvIznroDljZXnmoTor7TlsLHmmK\/kuIDkuKrnlKjmiLfnmoTovpPlhaXmk43kvZzkuI3kvJrpgKDmiJDlhbbku5bnlKjmiLfnmoTpmLvloZ7jgILlvZPnhLbvvIzkuIrpnaLnmoTku6PnoIHkvb\/nlKjnur\/nqIvmsaDlj6\/ku6Xojrflvpfmm7Tlpb3nmoTmgKfog73vvIzlm6DkuLrpopHnuYHnmoTliJvlu7rlkozplIDmr4Hnur\/nqIvmiYDpgKDmiJDnmoTlvIDplIDkuZ\/mmK\/kuI3lj6\/lv73op4bnmoTjgII8L3A+CjwvYmxvY2txdW90ZT4KPHA+5LiL6Z2i5piv5LiA5q615Zue5pi+5a6i5oi356uv5rWL6K+V5Luj56CB77yaPC9wPgo8cHJlPjxjb2RlPmltcG9ydCBqYXZhLmlvLkJ1ZmZlcmVkUmVhZGVyOwppbXBvcnQgamF2YS5pby5JbnB1dFN0cmVhbVJlYWRlcjsKaW1wb3J0IGphdmEuaW8uUHJpbnRXcml0ZXI7CmltcG9ydCBqYXZhLm5ldC5Tb2NrZXQ7CmltcG9ydCBqYXZhLnV0aWwuU2Nhbm5lcjsKCnB1YmxpYyBjbGFzcyBFY2hvQ2xpZW50IHsKCiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzKSB0aHJvd3MgRXhjZXB0aW9uIHsKICAgICAgICBTb2NrZXQgY2xpZW50ID0gbmV3IFNvY2tldCgmcXVvdDtsb2NhbGhvc3QmcXVvdDssIDY3ODkpOwogICAgICAgIFNjYW5uZXIgc2MgPSBuZXcgU2Nhbm5lcihTeXN0ZW0uaW4pOwogICAgICAgIFN5c3RlbS5vdXQucHJpbnQoJnF1b3Q76K+36L6T5YWl5YaF5a65OiAmcXVvdDspOwogICAgICAgIFN0cmluZyBtc2cgPSBzYy5uZXh0TGluZSgpOwogICAgICAgIHNjLmNsb3NlKCk7CiAgICAgICAgUHJpbnRXcml0ZXIgcHcgPSBuZXcgUHJpbnRXcml0ZXIoY2xpZW50LmdldE91dHB1dFN0cmVhbSgpKTsKICAgICAgICBwdy5wcmludGxuKG1zZyk7CiAgICAgICAgcHcuZmx1c2goKTsKICAgICAgICBCdWZmZXJlZFJlYWRlciBiciA9IG5ldyBCdWZmZXJlZFJlYWRlcihuZXcgSW5wdXRTdHJlYW1SZWFkZXIoY2xpZW50LmdldElucHV0U3RyZWFtKCkpKTsKICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oYnIucmVhZExpbmUoKSk7CiAgICAgICAgY2xpZW50LmNsb3NlKCk7CiAgICB9Cn0KPC9jb2RlPjwvcHJlPgo8cD7lpoLmnpzluIzmnJvnlKhOSU\/nmoTlpJrot6\/lpI3nlKjlpZfmjqXlrZflrp7njrDmnI3liqHlmajvvIzku6PnoIHlpoLkuIvmiYDnpLrjgIJOSU\/nmoTmk43kvZzomb3nhLbluKbmnaXkuobmm7Tlpb3nmoTmgKfog73vvIzkvYbmmK\/mnInkupvmk43kvZzmmK\/mr5TovoPlupXlsYLnmoTvvIzlr7nkuo7liJ3lrabogIXmnaXor7Tov5jmmK\/mnInkupvpmr7kuo7nkIbop6PjgII8L3A+CjxwcmU+PGNvZGU+aW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247CmltcG9ydCBqYXZhLm5ldC5JbmV0U29ja2V0QWRkcmVzczsKaW1wb3J0IGphdmEubmlvLkJ5dGVCdWZmZXI7CmltcG9ydCBqYXZhLm5pby5DaGFyQnVmZmVyOwppbXBvcnQgamF2YS5uaW8uY2hhbm5lbHMuU2VsZWN0aW9uS2V5OwppbXBvcnQgamF2YS5uaW8uY2hhbm5lbHMuU2VsZWN0b3I7CmltcG9ydCBqYXZhLm5pby5jaGFubmVscy5TZXJ2ZXJTb2NrZXRDaGFubmVsOwppbXBvcnQgamF2YS5uaW8uY2hhbm5lbHMuU29ja2V0Q2hhbm5lbDsKaW1wb3J0IGphdmEudXRpbC5JdGVyYXRvcjsKCnB1YmxpYyBjbGFzcyBFY2hvU2VydmVyTklPIHsKCiAgICBwcml2YXRlIHN0YXRpYyBmaW5hbCBpbnQgRUNIT19TRVJWRVJfUE9SVCA9IDY3ODk7CiAgICBwcml2YXRlIHN0YXRpYyBmaW5hbCBpbnQgRUNIT19TRVJWRVJfVElNRU9VVCA9IDUwMDA7CiAgICBwcml2YXRlIHN0YXRpYyBmaW5hbCBpbnQgQlVGRkVSX1NJWkUgPSAxMDI0OwoKICAgIHByaXZhdGUgc3RhdGljIFNlcnZlclNvY2tldENoYW5uZWwgc2VydmVyQ2hhbm5lbCA9IG51bGw7CiAgICBwcml2YXRlIHN0YXRpYyBTZWxlY3RvciBzZWxlY3RvciA9IG51bGw7ICAgIC8vIOWkmui3r+WkjeeUqOmAieaLqeWZqAogICAgcHJpdmF0ZSBzdGF0aWMgQnl0ZUJ1ZmZlciBidWZmZXIgPSBudWxsOyAgICAvLyDnvJPlhrLljLoKCiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzKSB7CiAgICAgICAgaW5pdCgpOwogICAgICAgIGxpc3RlbigpOwogICAgfQoKICAgIHByaXZhdGUgc3RhdGljIHZvaWQgaW5pdCgpIHsKICAgICAgICB0cnkgewogICAgICAgICAgICBzZXJ2ZXJDaGFubmVsID0gU2VydmVyU29ja2V0Q2hhbm5lbC5vcGVuKCk7CiAgICAgICAgICAgIGJ1ZmZlciA9IEJ5dGVCdWZmZXIuYWxsb2NhdGUoQlVGRkVSX1NJWkUpOwogICAgICAgICAgICBzZXJ2ZXJDaGFubmVsLnNvY2tldCgpLmJpbmQobmV3IEluZXRTb2NrZXRBZGRyZXNzKEVDSE9fU0VSVkVSX1BPUlQpKTsKICAgICAgICAgICAgc2VydmVyQ2hhbm5lbC5jb25maWd1cmVCbG9ja2luZyhmYWxzZSk7CiAgICAgICAgICAgIHNlbGVjdG9yID0gU2VsZWN0b3Iub3BlbigpOwogICAgICAgICAgICBzZXJ2ZXJDaGFubmVsLnJlZ2lzdGVyKHNlbGVjdG9yLCBTZWxlY3Rpb25LZXkuT1BfQUNDRVBUKTsKICAgICAgICB9IGNhdGNoIChFeGNlcHRpb24gZSkgewogICAgICAgICAgICB0aHJvdyBuZXcgUnVudGltZUV4Y2VwdGlvbihlKTsKICAgICAgICB9CiAgICB9CgogICAgcHJpdmF0ZSBzdGF0aWMgdm9pZCBsaXN0ZW4oKSB7CiAgICAgICAgd2hpbGUgKHRydWUpIHsKICAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICAgIGlmIChzZWxlY3Rvci5zZWxlY3QoRUNIT19TRVJWRVJfVElNRU9VVCkgIT0gMCkgewogICAgICAgICAgICAgICAgICAgIEl0ZXJhdG9yJmx0O1NlbGVjdGlvbktleSZndDsgaXQgPSBzZWxlY3Rvci5zZWxlY3RlZEtleXMoKS5pdGVyYXRvcigpOwogICAgICAgICAgICAgICAgICAgIHdoaWxlIChpdC5oYXNOZXh0KCkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgU2VsZWN0aW9uS2V5IGtleSA9IGl0Lm5leHQoKTsKICAgICAgICAgICAgICAgICAgICAgICAgaXQucmVtb3ZlKCk7CiAgICAgICAgICAgICAgICAgICAgICAgIGhhbmRsZUtleShrZXkpOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSBjYXRjaCAoRXhjZXB0aW9uIGUpIHsKICAgICAgICAgICAgICAgIGUucHJpbnRTdGFja1RyYWNlKCk7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9CgogICAgcHJpdmF0ZSBzdGF0aWMgdm9pZCBoYW5kbGVLZXkoU2VsZWN0aW9uS2V5IGtleSkgdGhyb3dzIElPRXhjZXB0aW9uIHsKICAgICAgICBTb2NrZXRDaGFubmVsIGNoYW5uZWwgPSBudWxsOwoKICAgICAgICB0cnkgewogICAgICAgICAgICBpZiAoa2V5LmlzQWNjZXB0YWJsZSgpKSB7CiAgICAgICAgICAgICAgICBTZXJ2ZXJTb2NrZXRDaGFubmVsIHNlcnZlckNoYW5uZWwgPSAoU2VydmVyU29ja2V0Q2hhbm5lbCkga2V5LmNoYW5uZWwoKTsKICAgICAgICAgICAgICAgIGNoYW5uZWwgPSBzZXJ2ZXJDaGFubmVsLmFjY2VwdCgpOwogICAgICAgICAgICAgICAgY2hhbm5lbC5jb25maWd1cmVCbG9ja2luZyhmYWxzZSk7CiAgICAgICAgICAgICAgICBjaGFubmVsLnJlZ2lzdGVyKHNlbGVjdG9yLCBTZWxlY3Rpb25LZXkuT1BfUkVBRCk7CiAgICAgICAgICAgIH0gZWxzZSBpZiAoa2V5LmlzUmVhZGFibGUoKSkgewogICAgICAgICAgICAgICAgY2hhbm5lbCA9IChTb2NrZXRDaGFubmVsKSBrZXkuY2hhbm5lbCgpOwogICAgICAgICAgICAgICAgYnVmZmVyLmNsZWFyKCk7CiAgICAgICAgICAgICAgICBpZiAoY2hhbm5lbC5yZWFkKGJ1ZmZlcikgJmd0OyAwKSB7CiAgICAgICAgICAgICAgICAgICAgYnVmZmVyLmZsaXAoKTsKICAgICAgICAgICAgICAgICAgICBDaGFyQnVmZmVyIGNoYXJCdWZmZXIgPSBDaGFyc2V0SGVscGVyLmRlY29kZShidWZmZXIpOwogICAgICAgICAgICAgICAgICAgIFN0cmluZyBtc2cgPSBjaGFyQnVmZmVyLnRvU3RyaW5nKCk7CiAgICAgICAgICAgICAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKCZxdW90O+aUtuWIsCZxdW90OyArIGNoYW5uZWwuZ2V0UmVtb3RlQWRkcmVzcygpICsgJnF1b3Q755qE5raI5oGv77yaJnF1b3Q7ICsgbXNnKTsKICAgICAgICAgICAgICAgICAgICBjaGFubmVsLndyaXRlKENoYXJzZXRIZWxwZXIuZW5jb2RlKENoYXJCdWZmZXIud3JhcChtc2cpKSk7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIGNoYW5uZWwuY2xvc2UoKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0gY2F0Y2ggKEV4Y2VwdGlvbiBlKSB7CiAgICAgICAgICAgIGUucHJpbnRTdGFja1RyYWNlKCk7CiAgICAgICAgICAgIGlmIChjaGFubmVsICE9IG51bGwpIHsKICAgICAgICAgICAgICAgIGNoYW5uZWwuY2xvc2UoKTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KCn0KPC9jb2RlPjwvcHJlPgo8cHJlPjxjb2RlPmltcG9ydCBqYXZhLm5pby5CeXRlQnVmZmVyOwppbXBvcnQgamF2YS5uaW8uQ2hhckJ1ZmZlcjsKaW1wb3J0IGphdmEubmlvLmNoYXJzZXQuQ2hhcmFjdGVyQ29kaW5nRXhjZXB0aW9uOwppbXBvcnQgamF2YS5uaW8uY2hhcnNldC5DaGFyc2V0OwppbXBvcnQgamF2YS5uaW8uY2hhcnNldC5DaGFyc2V0RGVjb2RlcjsKaW1wb3J0IGphdmEubmlvLmNoYXJzZXQuQ2hhcnNldEVuY29kZXI7CgpwdWJsaWMgZmluYWwgY2xhc3MgQ2hhcnNldEhlbHBlciB7CiAgICBwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgVVRGXzggPSAmcXVvdDtVVEYtOCZxdW90OzsKICAgIHByaXZhdGUgc3RhdGljIENoYXJzZXRFbmNvZGVyIGVuY29kZXIgPSBDaGFyc2V0LmZvck5hbWUoVVRGXzgpLm5ld0VuY29kZXIoKTsKICAgIHByaXZhdGUgc3RhdGljIENoYXJzZXREZWNvZGVyIGRlY29kZXIgPSBDaGFyc2V0LmZvck5hbWUoVVRGXzgpLm5ld0RlY29kZXIoKTsKCiAgICBwcml2YXRlIENoYXJzZXRIZWxwZXIoKSB7CiAgICB9CgogICAgcHVibGljIHN0YXRpYyBCeXRlQnVmZmVyIGVuY29kZShDaGFyQnVmZmVyIGluKSB0aHJvd3MgQ2hhcmFjdGVyQ29kaW5nRXhjZXB0aW9uewogICAgICAgIHJldHVybiBlbmNvZGVyLmVuY29kZShpbik7CiAgICB9CgogICAgcHVibGljIHN0YXRpYyBDaGFyQnVmZmVyIGRlY29kZShCeXRlQnVmZmVyIGluKSB0aHJvd3MgQ2hhcmFjdGVyQ29kaW5nRXhjZXB0aW9uewogICAgICAgIHJldHVybiBkZWNvZGVyLmRlY29kZShpbik7CiAgICB9Cn0KPC9jb2RlPjwvcHJlPgo="},"code":200}